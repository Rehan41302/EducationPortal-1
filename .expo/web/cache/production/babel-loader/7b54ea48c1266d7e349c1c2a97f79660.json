{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Icon from\"@expo/vector-icons/Ionicons\";var SettingScreen=function(_Component){_inherits(SettingScreen,_Component);var _super=_createSuper(SettingScreen);function SettingScreen(){_classCallCheck(this,SettingScreen);return _super.apply(this,arguments);}_createClass(SettingScreen,[{key:\"render\",value:function render(){return React.createElement(View,null,React.createElement(Text,null,\"this is setting screen\"));}}]);return SettingScreen;}(Component);export{SettingScreen as default};SettingScreen.navigationOptions={tabBarIcon:function tabBarIcon(_ref){var tintColor=_ref.tintColor,focused=_ref.focused;return React.createElement(Icon,{name:focused?'ios-settings':'md-settings',color:tintColor,size:25});}};","map":{"version":3,"sources":["E:/React/Arslan/native/components/screens/setting.js"],"names":["React","Component","Icon","SettingScreen","navigationOptions","tabBarIcon","tintColor","focused"],"mappings":"ggCAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,C,0GAEA,MAAOC,CAAAA,IAAP,mC,GACqBC,CAAAA,a,oQACT,CACJ,MACI,qBAAC,IAAD,MACI,oBAAC,IAAD,+BADJ,CADJ,CAKH,C,2BAPsCF,S,SAAtBE,a,aASrBA,aAAa,CAACC,iBAAd,CAAgC,CAC5BC,UAAU,CAAC,6BAAEC,CAAAA,SAAF,MAAEA,SAAF,CAAaC,OAAb,MAAaA,OAAb,OACP,qBAAC,IAAD,EACI,IAAI,CAAEA,OAAO,CAAG,cAAH,CAAoB,aADrC,CAEI,KAAK,CAAED,SAFX,CAGI,IAAI,CAAE,EAHV,EADO,EADiB,CAAhC","sourcesContent":["import React, {Component} from 'react';  \r\nimport {View,Text} from 'react-native';  \r\nimport Icon from 'react-native-vector-icons/Ionicons';  \r\nexport default class SettingScreen extends Component{  \r\n    render(){  \r\n        return(  \r\n            <View>  \r\n                <Text>this is setting screen</Text>  \r\n            </View>  \r\n        )  \r\n    }  \r\n}  \r\nSettingScreen.navigationOptions={  \r\n    tabBarIcon:({tintColor, focused})=>(  \r\n        <Icon  \r\n            name={focused ? 'ios-settings' : 'md-settings'}  \r\n            color={tintColor}  \r\n            size={25}  \r\n        />  \r\n    )  \r\n}  "]},"metadata":{},"sourceType":"module"}