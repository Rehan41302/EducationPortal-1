{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import{TabView}from'react-native-tab-view';import{NavigationHelpersContext,TabActions,useTheme}from'@react-navigation/native';import MaterialTopTabBar from\"./MaterialTopTabBar\";export default function MaterialTopTabView(_ref){var pager=_ref.pager,lazyPlaceholder=_ref.lazyPlaceholder,_ref$tabBar=_ref.tabBar,tabBar=_ref$tabBar===void 0?function(props){return React.createElement(MaterialTopTabBar,props);}:_ref$tabBar,tabBarOptions=_ref.tabBarOptions,state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors,sceneContainerStyle=_ref.sceneContainerStyle,rest=_objectWithoutProperties(_ref,[\"pager\",\"lazyPlaceholder\",\"tabBar\",\"tabBarOptions\",\"state\",\"navigation\",\"descriptors\",\"sceneContainerStyle\"]);var _useTheme=useTheme(),colors=_useTheme.colors;var renderTabBar=function renderTabBar(props){return tabBar(_objectSpread(_objectSpread(_objectSpread({},tabBarOptions),props),{},{state:state,navigation:navigation,descriptors:descriptors}));};return React.createElement(NavigationHelpersContext.Provider,{value:navigation},React.createElement(TabView,_extends({},rest,{onIndexChange:function onIndexChange(index){return navigation.dispatch(_objectSpread(_objectSpread({},TabActions.jumpTo(state.routes[index].name)),{},{target:state.key}));},renderScene:function renderScene(_ref2){var route=_ref2.route;return descriptors[route.key].render();},navigationState:state,renderTabBar:renderTabBar,renderPager:pager,renderLazyPlaceholder:lazyPlaceholder,onSwipeStart:function onSwipeStart(){return navigation.emit({type:'swipeStart'});},onSwipeEnd:function onSwipeEnd(){return navigation.emit({type:'swipeEnd'});},sceneContainerStyle:[{backgroundColor:colors.background},sceneContainerStyle]})));}","map":{"version":3,"sources":["MaterialTopTabView.tsx"],"names":["tabBar","props","sceneContainerStyle","rest","colors","useTheme","renderTabBar","state","navigation","descriptors","index","TabActions","target","key","route","type","backgroundColor","background"],"mappings":"i7DAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,OAAA,KAAA,uBAAA,CACA,OAAA,wBAAA,CAAA,UAAA,CAAA,QAAA,KAAA,0BAAA,CAOA,MAAA,CAAA,iBAAA,2BAeA,cAAe,SAAA,CAAA,kBAAA,CAAA,IAAA,CAUL,IAViC,CAAA,KAUjC,CAAA,IAAA,CAViC,KAUjC,CAViC,eAUjC,CAAA,IAAA,CAViC,eAUjC,aAAA,IAAA,CAPRA,MAOQ,CAPRA,MAOQ,sBAPEC,SAAAA,KAAD,QAAmC,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAHH,KAGG,CAAnC,EAOD,aAViC,aAUjC,CAAA,IAAA,CAViC,aAUjC,CAViC,KAUjC,CAAA,IAAA,CAViC,KAUjC,CAViC,UAUjC,CAAA,IAAA,CAViC,UAUjC,CAViC,WAUjC,CAAA,IAAA,CAViC,WAUjC,CAFRC,mBAEQ,CAAA,IAAA,CAFRA,mBAEQ,CADLC,IACK,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,CAAA,eACWE,QAAnB,EADQ,CACAD,MADA,WACAA,MADA,CAGR,GAAME,CAAAA,YAAY,CAAIL,QAAhBK,CAAAA,YAAgBL,CAAAA,KAAD,CAA+B,CAClD,MAAOD,CAAAA,MAAM,CAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAGXO,KAAK,CAHM,KAAA,CAIXC,UAAU,CAJC,UAAA,CAKXC,WAAW,CAAEA,WALF,CAAA,CAAA,CAAb,CADF,CAAA,CAUA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,wBAAD,CAAA,QAAA,CAAA,CAAmC,KAAK,CAAED,UAA1C,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,aAAa,CAAGE,uBAAAA,KAAD,QACb,CAAA,UAAU,CAAV,QAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CACKC,UAAU,CAAVA,MAAAA,CAAkBJ,KAAK,CAALA,MAAAA,CAAAA,KAAAA,EADvB,IACKI,CADL,CAAA,CAAA,EAAA,CAAA,CAEEC,MAAM,CAAEL,KAAK,CAACM,GAFhB,CAAA,CAAA,CADa,EAFjB,CAQE,WAAW,CAAE,+BAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeL,CAAAA,WAAW,CAACK,KAAK,CAAjBL,GAAW,CAAXA,CAR9B,MAQ8BA,EAAf,EARf,CASE,eAAe,CATjB,KAAA,CAUE,YAAY,CAVd,YAAA,CAWE,WAAW,CAXb,KAAA,CAYE,qBAAqB,CAZvB,eAAA,CAaE,YAAY,CAAE,8BAAM,CAAA,UAAU,CAAV,IAAA,CAAgB,CAAEM,IAAI,CAAE,YAAR,CAAhB,CAAN,EAbhB,CAcE,UAAU,CAAE,4BAAM,CAAA,UAAU,CAAV,IAAA,CAAgB,CAAEA,IAAI,CAAE,UAAR,CAAhB,CAAN,EAdd,CAeE,mBAAmB,CAAE,CACnB,CAAEC,eAAe,CAAEZ,MAAM,CAACa,UAA1B,CADmB,CAAA,mBAAA,CAfvB,CAAA,CAAA,CADF,CADF,CAwBD","sourcesContent":["import * as React from 'react';\nimport { TabView, SceneRendererProps } from 'react-native-tab-view';\nimport {\n  NavigationHelpersContext,\n  TabNavigationState,\n  TabActions,\n  useTheme,\n} from '@react-navigation/native';\n\nimport MaterialTopTabBar from './MaterialTopTabBar';\nimport type {\n  MaterialTopTabDescriptorMap,\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationHelpers,\n  MaterialTopTabBarProps,\n} from '../types';\n\ntype Props = MaterialTopTabNavigationConfig & {\n  state: TabNavigationState;\n  navigation: MaterialTopTabNavigationHelpers;\n  descriptors: MaterialTopTabDescriptorMap;\n  tabBarPosition?: 'top' | 'bottom';\n};\n\nexport default function MaterialTopTabView({\n  pager,\n  lazyPlaceholder,\n  tabBar = (props: MaterialTopTabBarProps) => <MaterialTopTabBar {...props} />,\n  tabBarOptions,\n  state,\n  navigation,\n  descriptors,\n  sceneContainerStyle,\n  ...rest\n}: Props) {\n  const { colors } = useTheme();\n\n  const renderTabBar = (props: SceneRendererProps) => {\n    return tabBar({\n      ...tabBarOptions,\n      ...props,\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n    });\n  };\n\n  return (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <TabView\n        {...rest}\n        onIndexChange={(index) =>\n          navigation.dispatch({\n            ...TabActions.jumpTo(state.routes[index].name),\n            target: state.key,\n          })\n        }\n        renderScene={({ route }) => descriptors[route.key].render()}\n        navigationState={state}\n        renderTabBar={renderTabBar}\n        renderPager={pager}\n        renderLazyPlaceholder={lazyPlaceholder}\n        onSwipeStart={() => navigation.emit({ type: 'swipeStart' })}\n        onSwipeEnd={() => navigation.emit({ type: 'swipeEnd' })}\n        sceneContainerStyle={[\n          { backgroundColor: colors.background },\n          sceneContainerStyle,\n        ]}\n      />\n    </NavigationHelpersContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}