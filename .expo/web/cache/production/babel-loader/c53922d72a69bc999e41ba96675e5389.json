{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{TabBar}from'react-native-tab-view';import{useTheme}from'@react-navigation/native';import Color from'color';export default function TabBarTop(props){var _useTheme=useTheme(),colors=_useTheme.colors;var state=props.state,navigation=props.navigation,descriptors=props.descriptors,_props$activeTintColo=props.activeTintColor,activeTintColor=_props$activeTintColo===void 0?colors.text:_props$activeTintColo,_props$inactiveTintCo=props.inactiveTintColor,inactiveTintColor=_props$inactiveTintCo===void 0?Color(activeTintColor).alpha(0.5).rgb().string():_props$inactiveTintCo,_props$allowFontScali=props.allowFontScaling,allowFontScaling=_props$allowFontScali===void 0?true:_props$allowFontScali,_props$showIcon=props.showIcon,showIcon=_props$showIcon===void 0?false:_props$showIcon,_props$showLabel=props.showLabel,showLabel=_props$showLabel===void 0?true:_props$showLabel,_props$pressColor=props.pressColor,pressColor=_props$pressColor===void 0?Color(activeTintColor).alpha(0.08).rgb().string():_props$pressColor,iconStyle=props.iconStyle,labelStyle=props.labelStyle,indicatorStyle=props.indicatorStyle,style=props.style,rest=_objectWithoutProperties(props,[\"state\",\"navigation\",\"descriptors\",\"activeTintColor\",\"inactiveTintColor\",\"allowFontScaling\",\"showIcon\",\"showLabel\",\"pressColor\",\"iconStyle\",\"labelStyle\",\"indicatorStyle\",\"style\"]);return React.createElement(TabBar,_extends({},rest,{navigationState:state,activeColor:activeTintColor,inactiveColor:inactiveTintColor,indicatorStyle:[{backgroundColor:colors.primary},indicatorStyle],style:[{backgroundColor:colors.card},style],pressColor:pressColor,getAccessibilityLabel:function getAccessibilityLabel(_ref){var route=_ref.route;return descriptors[route.key].options.tabBarAccessibilityLabel;},getTestID:function getTestID(_ref2){var route=_ref2.route;return descriptors[route.key].options.tabBarTestID;},onTabPress:function onTabPress(_ref3){var route=_ref3.route,preventDefault=_ref3.preventDefault;var event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(event.defaultPrevented){preventDefault();}},onTabLongPress:function onTabLongPress(_ref4){var route=_ref4.route;return navigation.emit({type:'tabLongPress',target:route.key});},renderIcon:function renderIcon(_ref5){var route=_ref5.route,focused=_ref5.focused,color=_ref5.color;if(showIcon===false){return null;}var options=descriptors[route.key].options;if(options.tabBarIcon!==undefined){var icon=options.tabBarIcon({focused:focused,color:color});return React.createElement(View,{style:[styles.icon,iconStyle]},icon);}return null;},renderLabel:function renderLabel(_ref6){var route=_ref6.route,focused=_ref6.focused,color=_ref6.color;if(showLabel===false){return null;}var options=descriptors[route.key].options;var label=options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;if(typeof label==='string'){return React.createElement(Text,{style:[styles.label,{color:color},labelStyle],allowFontScaling:allowFontScaling},label);}return label({focused:focused,color:color});}}));}var styles=StyleSheet.create({icon:{height:24,width:24},label:{textAlign:'center',textTransform:'uppercase',fontSize:13,margin:4,backgroundColor:'transparent'}});","map":{"version":3,"sources":["MaterialTopTabBar.tsx"],"names":["colors","useTheme","activeTintColor","inactiveTintColor","Color","allowFontScaling","showIcon","showLabel","pressColor","style","backgroundColor","primary","card","route","descriptors","preventDefault","event","type","target","canPreventDefault","key","color","options","icon","focused","styles","label","height","width","textAlign","textTransform","fontSize","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { TabBar } from 'react-native-tab-view';\nimport { Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\n\nimport type { MaterialTopTabBarProps } from '../types';\n\nexport default function TabBarTop(props: MaterialTopTabBarProps) {\n  const { colors } = useTheme();\n\n  const {\n    state,\n    navigation,\n    descriptors,\n    activeTintColor = colors.text,\n    inactiveTintColor = Color(activeTintColor).alpha(0.5).rgb().string(),\n    allowFontScaling = true,\n    showIcon = false,\n    showLabel = true,\n    pressColor = Color(activeTintColor).alpha(0.08).rgb().string(),\n    iconStyle,\n    labelStyle,\n    indicatorStyle,\n    style,\n    ...rest\n  } = props;\n\n  return (\n    <TabBar\n      {...rest}\n      navigationState={state}\n      activeColor={activeTintColor}\n      inactiveColor={inactiveTintColor}\n      indicatorStyle={[{ backgroundColor: colors.primary }, indicatorStyle]}\n      style={[{ backgroundColor: colors.card }, style]}\n      pressColor={pressColor}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      onTabLongPress={({ route }) =>\n        navigation.emit({\n          type: 'tabLongPress',\n          target: route.key,\n        })\n      }\n      renderIcon={({ route, focused, color }) => {\n        if (showIcon === false) {\n          return null;\n        }\n\n        const { options } = descriptors[route.key];\n\n        if (options.tabBarIcon !== undefined) {\n          const icon = options.tabBarIcon({ focused, color });\n\n          return <View style={[styles.icon, iconStyle]}>{icon}</View>;\n        }\n\n        return null;\n      }}\n      renderLabel={({ route, focused, color }) => {\n        if (showLabel === false) {\n          return null;\n        }\n\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : (route as Route<string>).name;\n\n        if (typeof label === 'string') {\n          return (\n            <Text\n              style={[styles.label, { color }, labelStyle]}\n              allowFontScaling={allowFontScaling}\n            >\n              {label}\n            </Text>\n          );\n        }\n\n        return label({ focused, color });\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    fontSize: 13,\n    margin: 4,\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}