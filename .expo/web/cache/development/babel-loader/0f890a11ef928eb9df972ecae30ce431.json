{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/denoversshehroz/Documents/React Native/Rehan/EducationPortal/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Constants from \"expo-constants\";\nimport fire from \"./config/fire\";\nimport TutorLogin from \"./components/TutorLogin\";\nimport TutorRegister from \"./components/TutorRegister\";\nimport StudentLogin from \"./components/StudentLogin\";\nimport StudentRegister from \"./components/StudentRegister\";\nimport TutorProfile from \"./components/tutordashboard/TutorProfile\";\nimport StudentProfile from \"./components/studentdashboard/StudentProfile\";\nimport QuizUpload from \"./components/tutordashboard/QuizUpload\";\nimport OnlineClass from \"./components/tutordashboard/OnlineClass\";\nimport StudentClass from \"./components/studentdashboard/StudentClass\";\nimport QuizAttempt from \"./components/studentdashboard/QuizAttempt\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Card } from \"react-native-paper\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport TutorSignUp from \"./components/TutorSignup\";\nimport StudentSignUp from \"./components/StudentSignup\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({\n                Roboto: require(\"native-base/Fonts/Roboto.ttf\"),\n                Roboto_medium: require(\"native-base/Fonts/Roboto_medium.ttf\")\n              }, Ionicons.font)));\n\n            case 2:\n              this.setState({\n                isReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isReady) {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(OnlineClass, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar navigator = createStackNavigator({\n  tutorlogin: {\n    screen: TutorLogin\n  },\n  tutorregister: {\n    screen: TutorRegister\n  },\n  tutorprofile: {\n    screen: TutorProfile\n  },\n  studentlogin: {\n    screen: StudentLogin\n  },\n  studentregister: {\n    screen: StudentRegister\n  },\n  tutorsignup: {\n    screen: TutorSignUp\n  },\n  studentsignup: {\n    screen: StudentSignUp\n  }\n});\nvar AppContainer = createAppContainer(navigator);","map":{"version":3,"sources":["/Users/denoversshehroz/Documents/React Native/Rehan/EducationPortal/App.js"],"names":["React","Constants","fire","TutorLogin","TutorRegister","StudentLogin","StudentRegister","TutorProfile","StudentProfile","QuizUpload","OnlineClass","StudentClass","QuizAttempt","AppLoading","Font","Ionicons","Card","createAppContainer","createStackNavigator","TutorSignUp","StudentSignUp","App","props","state","isReady","loadAsync","Roboto","require","Roboto_medium","font","setState","Component","navigator","tutorlogin","screen","tutorregister","tutorprofile","studentlogin","studentregister","tutorsignup","studentsignup","AppContainer"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,IAAP;AAGA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAGA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;;;;;;;+CAGOV,IAAI,CAACW,SAAL;AACJC,gBAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CADX;AAEJC,gBAAAA,aAAa,EAAED,OAAO,CAAC,qCAAD;AAFlB,iBAGDZ,QAAQ,CAACc,IAHR,E;;;AAKN,mBAAKC,QAAL,CAAc;AAAEN,gBAAAA,OAAO,EAAE;AAAX,eAAd;;;;;;;;;;;6BAGO;AACP,UAAI,CAAC,KAAKD,KAAL,CAAWC,OAAhB,EAAyB;AACvB,eAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAOD;;;;EA5B8BxB,KAAK,CAAC+B,S;;SAAlBV,G;AA+BrB,IAAMW,SAAS,GAAGd,oBAAoB,CAAC;AACrCe,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE/B;AADE,GADyB;AAIrCgC,EAAAA,aAAa,EAAE;AACbD,IAAAA,MAAM,EAAE9B;AADK,GAJsB;AAOrCgC,EAAAA,YAAY,EAAE;AACZF,IAAAA,MAAM,EAAE3B;AADI,GAPuB;AAUrC8B,EAAAA,YAAY,EAAE;AACZH,IAAAA,MAAM,EAAE7B;AADI,GAVuB;AAarCiC,EAAAA,eAAe,EAAE;AACfJ,IAAAA,MAAM,EAAE5B;AADO,GAboB;AAgBrCiC,EAAAA,WAAW,EAAE;AACXL,IAAAA,MAAM,EAAEf;AADG,GAhBwB;AAmBrCqB,EAAAA,aAAa,EAAE;AACbN,IAAAA,MAAM,EAAEd;AADK;AAnBsB,CAAD,CAAtC;AAwBA,IAAMqB,YAAY,GAAGxB,kBAAkB,CAACe,SAAD,CAAvC","sourcesContent":["import * as React from \"react\";\nimport { Text, View, StyleSheet, Image } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport fire from \"./config/fire\";\n\n// You can import from local files\nimport TutorLogin from \"./components/TutorLogin\";\nimport TutorRegister from \"./components/TutorRegister\";\nimport StudentLogin from \"./components/StudentLogin\";\nimport StudentRegister from \"./components/StudentRegister\";\nimport TutorProfile from \"./components/tutordashboard/TutorProfile\";\nimport StudentProfile from \"./components/studentdashboard/StudentProfile\";\nimport QuizUpload from \"./components/tutordashboard/QuizUpload\";\nimport OnlineClass from \"./components/tutordashboard/OnlineClass\";\nimport StudentClass from \"./components/studentdashboard/StudentClass\";\nimport QuizAttempt from \"./components/studentdashboard/QuizAttempt\";\nimport { AppLoading } from \"expo\";\n// import { Container, Text } from 'native-base';\nimport * as Font from \"expo-font\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\n// or any pure javascript modules available in npm\nimport { Card } from \"react-native-paper\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport TutorSignUp from \"./components/TutorSignup\";\nimport StudentSignUp from \"./components/StudentSignup\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReady: false\n    };\n  }\n\n  async componentDidMount() {\n    await Font.loadAsync({\n      Roboto: require(\"native-base/Fonts/Roboto.ttf\"),\n      Roboto_medium: require(\"native-base/Fonts/Roboto_medium.ttf\"),\n      ...Ionicons.font\n    });\n    this.setState({ isReady: true });\n  }\n\n  render() {\n    if (!this.state.isReady) {\n      return <AppLoading />;\n    }\n    return (\n      // <QuizUpload />\n      <OnlineClass />\n      // <TutorLogin />\n      // <StudentClass />\n      // <AppContainer />\n    );\n  }\n}\n\nconst navigator = createStackNavigator({\n  tutorlogin: {\n    screen: TutorLogin\n  },\n  tutorregister: {\n    screen: TutorRegister\n  },\n  tutorprofile: {\n    screen: TutorProfile\n  },\n  studentlogin: {\n    screen: StudentLogin\n  },\n  studentregister: {\n    screen: StudentRegister\n  },\n  tutorsignup: {\n    screen: TutorSignUp\n  },\n  studentsignup: {\n    screen: StudentSignUp\n  }\n});\n\nconst AppContainer = createAppContainer(navigator);\n"]},"metadata":{},"sourceType":"module"}