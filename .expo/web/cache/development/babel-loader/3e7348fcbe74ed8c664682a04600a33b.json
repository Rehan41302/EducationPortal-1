{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/denoversshehroz/Documents/React Native/Rehan/EducationPortal/components/tutordashboard/QuizUpload.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport firebase from \"../../config/fire\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Web } from \"react-native-web/dist/index\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nimport { connect } from \"react-redux\";\nimport { firestore } from \"firebase\";\nimport * as FileSystem from \"expo-file-system\";\nimport { WebView } from \"react-native-webview\";\n\nvar PDFVIEW = function PDFVIEW() {\n  return React.createElement(WebView, {\n    style: styles.webview,\n    source: {\n      html: \"<h1>Hello<h1/>\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  });\n};\n\nvar QuizUpload = function (_React$Component) {\n  _inherits(QuizUpload, _React$Component);\n\n  var _super = _createSuper(QuizUpload);\n\n  function QuizUpload() {\n    var _this2;\n\n    _classCallCheck(this, QuizUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      fullPath: \"\",\n      downloadURL: \"\",\n      progress: 0,\n      uploading: false\n    };\n\n    _this2.pickDocumentPDF = function _callee() {\n      var res, that, getTime, storageRef, ref, fullPath, uploadTask;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({\n                type: \"application/pdf\"\n              }));\n\n            case 3:\n              res = _context.sent;\n              console.log(\"res : \" + JSON.stringify(res));\n              console.log(\"Type : \" + res.type);\n\n              if (res.type === \"success\") {\n                _this2.setState({\n                  uploading: true\n                });\n\n                that = _assertThisInitialized(_this2);\n                getTime = new Date().getTime();\n                storageRef = firebase.storage().ref();\n                ref = storageRef.child(\"/quiz/\" + getTime + \"-\" + res.name);\n                fullPath = ref.fullPath;\n                uploadTask = ref.putString(res.uri, \"data_url\");\n                uploadTask.on(\"state_changed\", function (snapshot) {\n                  var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                  console.log(\"Upload is \" + progress + \"% done\");\n                  that.setState({\n                    progress: Math.round(progress)\n                  });\n                }, function (error) {\n                  console.error(error.message);\n                  Alert.alert(error.message);\n                }, function () {\n                  var _that$props, _that$props$user;\n\n                  var prevQuiz = ((_that$props = that.props) == null ? void 0 : (_that$props$user = _that$props.user) == null ? void 0 : _that$props$user.quiz) || [];\n                  uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    var _that$props$user2;\n\n                    prevQuiz.push({\n                      uploadTime: firestore.Timestamp.now(),\n                      pdfLink: downloadURL,\n                      storageAddress: fullPath\n                    });\n                    var db = firebase.firestore();\n                    db.collection(\"tutors\").doc((_that$props$user2 = that.props.user) == null ? void 0 : _that$props$user2.id).set(_objectSpread(_objectSpread({}, that.props.user), {}, {\n                      quiz: prevQuiz\n                    })).then(function () {\n                      that.setState({\n                        uploading: false,\n                        downloadURL: downloadURL,\n                        fullPath: fullPath\n                      });\n                    }).catch(function (error) {\n                      console.error(error);\n                      Alert.alert(error.message);\n                    });\n                  }).catch(function (error) {\n                    console.error(error);\n                    Alert.alert(error.message);\n                  });\n                });\n              }\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              alert(\"Unknown Error: \" + JSON.stringify(_context.t0));\n              throw _context.t0;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    _this2.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var createDate = new Date(item.uploadTime.seconds * 1000);\n      return React.createElement(Card, {\n        style: styles.card,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, React.createElement(Card.Content, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, React.createElement(Title, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, \"Quiz \", index + 1, \" \"), React.createElement(Paragraph, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }, \"Uploaded: \", createDate.toLocaleTimeString(), \",\", \" \", createDate.toDateString(), \" \")), React.createElement(Card.Actions, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        onPress: _this2.downloadPDF,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, \"DOWNLOAD\")));\n    };\n\n    _this2.downloadPDF = function (link) {\n      FileSystem.downloadAsync(\"http://techslides.com/demos/sample-videos/small.mp4\", FileSystem.documentDirectory + \"small.mp4\").then(function (_ref2) {\n        var uri = _ref2.uri;\n        console.log(\"Finished downloading to \", uri);\n      }).catch(function (error) {\n        console.error(error);\n        Alert.alert(error);\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(QuizUpload, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      console.log({\n        user: user\n      });\n      return React.createElement(View, {\n        style: {\n          backgroundColor: \"pink\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.uploadBtn,\n        onPress: this.pickDocumentPDF,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, this.state.uploading ? \"Uploading \" + this.state.progress + \"%\" : \"Upload New\")), (user == null ? void 0 : user.quiz) && React.createElement(FlatList, {\n        data: user.quiz,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.pdfLink;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }), React.createElement(PDFVIEW, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return QuizUpload;\n}(React.Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  console.log({\n    state: state\n  });\n  return {\n    user: state.authReducer.user,\n    isAuthenticated: state.authReducer.isAuthenticated\n  };\n};\n\nexport default connect(mapStatetoProps)(QuizUpload);\nvar styles = StyleSheet.create({\n  card: {\n    marginVertical: 10\n  },\n  webview: {\n    backgroundColor: \"yellow\",\n    height: 320,\n    width: 200\n  },\n  uploadBtn: {\n    flex: 1,\n    color: \"#fff\",\n    paddingVertical: 10,\n    backgroundColor: \"#4fc3f7\"\n  }\n});","map":{"version":3,"sources":["/Users/denoversshehroz/Documents/React Native/Rehan/EducationPortal/components/tutordashboard/QuizUpload.js"],"names":["React","firebase","Web","DocumentPicker","Avatar","Button","Card","Title","Paragraph","connect","firestore","FileSystem","WebView","PDFVIEW","styles","webview","html","QuizUpload","state","fullPath","downloadURL","progress","uploading","pickDocumentPDF","getDocumentAsync","type","res","console","log","JSON","stringify","setState","that","getTime","Date","storageRef","storage","ref","child","name","uploadTask","putString","uri","on","snapshot","bytesTransferred","totalBytes","Math","round","error","message","Alert","alert","prevQuiz","props","user","quiz","getDownloadURL","then","push","uploadTime","Timestamp","now","pdfLink","storageAddress","db","collection","doc","id","set","catch","renderItem","item","index","createDate","seconds","card","toLocaleTimeString","toDateString","downloadPDF","link","downloadAsync","documentDirectory","backgroundColor","uploadBtn","buttonText","Component","mapStatetoProps","authReducer","isAuthenticated","StyleSheet","create","marginVertical","height","width","flex","color","paddingVertical"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP;;;;;;;;;;;SAYEC,G;;AAGF,OAAO,KAAKC,cAAZ,MAAgC,sBAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,SAAO,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEC,MAAM,CAACC,OAAvB;AAAgC,IAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;IAIMC,U;;;;;;;;;;;;;;;WACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,SAAS,EAAE;AAJL,K;;WAORC,e,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEIpB,cAAc,CAACqB,gBAAf,CAAgC;AAChDC,gBAAAA,IAAI,EAAE;AAD0C,eAAhC,CAFJ;;AAAA;AAERC,cAAAA,GAFQ;AAMdC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAWC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAvB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,GAAG,CAACD,IAA5B;;AACA,kBAAIC,GAAG,CAACD,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,uBAAKM,QAAL,CAAc;AAAET,kBAAAA,SAAS,EAAE;AAAb,iBAAd;;AACIU,gBAAAA,IAFsB;AAGtBC,gBAAAA,OAHsB,GAGZ,IAAIC,IAAJ,GAAWD,OAAX,EAHY;AAItBE,gBAAAA,UAJsB,GAITlC,QAAQ,CAACmC,OAAT,GAAmBC,GAAnB,EAJS;AAKtBA,gBAAAA,GALsB,GAKhBF,UAAU,CAACG,KAAX,YAA0BL,OAA1B,SAAqCP,GAAG,CAACa,IAAzC,CALgB;AAMtBpB,gBAAAA,QANsB,GAMXkB,GAAG,CAAClB,QANO;AAOtBqB,gBAAAA,UAPsB,GAOTH,GAAG,CAACI,SAAJ,CAAcf,GAAG,CAACgB,GAAlB,EAAuB,UAAvB,CAPS;AAS1BF,gBAAAA,UAAU,CAACG,EAAX,CACE,eADF,EAEE,UAASC,QAAT,EAAmB;AAGjB,sBAAIvB,QAAQ,GACTuB,QAAQ,CAACC,gBAAT,GAA4BD,QAAQ,CAACE,UAAtC,GAAoD,GADtD;AAEAnB,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAeP,QAAf,GAA0B,QAAtC;AACAW,kBAAAA,IAAI,CAACD,QAAL,CAAc;AACZV,oBAAAA,QAAQ,EAAE0B,IAAI,CAACC,KAAL,CAAW3B,QAAX;AADE,mBAAd;AAGD,iBAXH,EAYE,UAAS4B,KAAT,EAAgB;AAEdtB,kBAAAA,OAAO,CAACsB,KAAR,CAAcA,KAAK,CAACC,OAApB;AACAC,kBAAAA,KAAK,CAACC,KAAN,CAAYH,KAAK,CAACC,OAAlB;AACD,iBAhBH,EAiBE,YAAW;AAAA;;AAET,sBAAIG,QAAQ,GAAG,gBAAArB,IAAI,CAACsB,KAAL,qDAAYC,IAAZ,sCAAkBC,IAAlB,KAA0B,EAAzC;AACAhB,kBAAAA,UAAU,CAACI,QAAX,CAAoBP,GAApB,CACGoB,cADH,GAEGC,IAFH,CAEQ,UAAStC,WAAT,EAAsB;AAAA;;AAC1BiC,oBAAAA,QAAQ,CAACM,IAAT,CAAc;AACZC,sBAAAA,UAAU,EAAElD,SAAS,CAACmD,SAAV,CAAoBC,GAApB,EADA;AAEZC,sBAAAA,OAAO,EAAE3C,WAFG;AAGZ4C,sBAAAA,cAAc,EAAE7C;AAHJ,qBAAd;AAKA,wBAAM8C,EAAE,GAAGhE,QAAQ,CAACS,SAAT,EAAX;AACAuD,oBAAAA,EAAE,CAACC,UAAH,CAAc,QAAd,EACGC,GADH,sBACOnC,IAAI,CAACsB,KAAL,CAAWC,IADlB,qBACO,kBAAiBa,EADxB,EAEGC,GAFH,iCAGOrC,IAAI,CAACsB,KAAL,CAAWC,IAHlB;AAIIC,sBAAAA,IAAI,EAAEH;AAJV,wBAMGK,IANH,CAMQ,YAAM;AACV1B,sBAAAA,IAAI,CAACD,QAAL,CAAc;AACZT,wBAAAA,SAAS,EAAE,KADC;AAEZF,wBAAAA,WAAW,EAAXA,WAFY;AAGZD,wBAAAA,QAAQ,EAARA;AAHY,uBAAd;AAKD,qBAZH,EAaGmD,KAbH,CAaS,UAAArB,KAAK,EAAI;AACdtB,sBAAAA,OAAO,CAACsB,KAAR,CAAcA,KAAd;AACAE,sBAAAA,KAAK,CAACC,KAAN,CAAYH,KAAK,CAACC,OAAlB;AACD,qBAhBH;AAiBD,mBA1BH,EA2BGoB,KA3BH,CA2BS,UAAArB,KAAK,EAAI;AACdtB,oBAAAA,OAAO,CAACsB,KAAR,CAAcA,KAAd;AACAE,oBAAAA,KAAK,CAACC,KAAN,CAAYH,KAAK,CAACC,OAAlB;AACD,mBA9BH;AA+BD,iBAnDH;AAqDD;;AAtEa;AAAA;;AAAA;AAAA;AAAA;AAwEdE,cAAAA,KAAK,CAAC,oBAAoBvB,IAAI,CAACC,SAAL,aAArB,CAAL;AAxEc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;WA6ElByC,U,GAAa,gBAAqB;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;AAChC,UAAIC,UAAU,GAAG,IAAIxC,IAAJ,CAASsC,IAAI,CAACZ,UAAL,CAAgBe,OAAhB,GAA0B,IAAnC,CAAjB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7D,MAAM,CAAC8D,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaH,KAAK,GAAG,CAArB,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACaC,UAAU,CAACG,kBAAX,EADb,OAC+C,GAD/C,EAEGH,UAAU,CAACI,YAAX,EAFH,EAE8B,GAF9B,CAFF,CADF,EAUE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,OAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAVF,CADF;AAgBD,K;;WAEDA,W,GAAc,UAAAC,IAAI,EAAI;AACpBrE,MAAAA,UAAU,CAACsE,aAAX,CACE,qDADF,EAEEtE,UAAU,CAACuE,iBAAX,GAA+B,WAFjC,EAIGxB,IAJH,CAIQ,iBAAa;AAAA,YAAVhB,GAAU,SAAVA,GAAU;AACjBf,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCc,GAAxC;AACD,OANH,EAOG4B,KAPH,CAOS,UAAArB,KAAK,EAAI;AACdtB,QAAAA,OAAO,CAACsB,KAAR,CAAcA,KAAd;AACAE,QAAAA,KAAK,CAACC,KAAN,CAAYH,KAAZ;AACD,OAVH;AAWD,K;;;;;;;6BAEQ;AAAA,UACDM,IADC,GACQ,KAAKD,KADb,CACDC,IADC;AAEP5B,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAE2B,QAAAA,IAAI,EAAJA;AAAF,OAAZ;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE4B,UAAAA,eAAe,EAAE;AAAnB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAErE,MAAM,CAACsE,SADhB;AAEE,QAAA,OAAO,EAAE,KAAK7D,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACuE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKnE,KAAL,CAAWI,SAAX,kBACgB,KAAKJ,KAAL,CAAWG,QAD3B,SAEG,YAHN,CAJF,CADF,EAoBG,CAAAkC,IAAI,QAAJ,YAAAA,IAAI,CAAEC,IAAN,KAEC,oBAAC,QAAD;AACE,QAAA,IAAI,EAAED,IAAI,CAACC,IADb;AAEE,QAAA,UAAU,EAAE,KAAKe,UAFnB;AAGE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACT,OAAT;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBJ,EA6BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,CADF;AAiCD;;;;EA5JsB/D,KAAK,CAACsF,S;;AA+J/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAArE,KAAK,EAAI;AAC/BS,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEV,IAAAA,KAAK,EAALA;AAAF,GAAZ;AACA,SAAO;AACLqC,IAAAA,IAAI,EAAErC,KAAK,CAACsE,WAAN,CAAkBjC,IADnB;AAELkC,IAAAA,eAAe,EAAEvE,KAAK,CAACsE,WAAN,CAAkBC;AAF9B,GAAP;AAID,CAND;;AAOA,eAAehF,OAAO,CAAC8E,eAAD,CAAP,CAAyBtE,UAAzB,CAAf;AAEA,IAAMH,MAAM,GAAG4E,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,IAAI,EAAE;AACJgB,IAAAA,cAAc,EAAE;AADZ,GADyB;AAI/B7E,EAAAA,OAAO,EAAE;AACPoE,IAAAA,eAAe,EAAE,QADV;AAEPU,IAAAA,MAAM,EAAE,GAFD;AAGPC,IAAAA,KAAK,EAAE;AAHA,GAJsB;AAS/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,eAAe,EAAE,EAHR;AAITd,IAAAA,eAAe,EAAE;AAJR;AAToB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"../../config/fire\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Image,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  ImageBackground,\n  Alert,\n  FlatList,\n  Web,\n  SafeAreaView\n} from \"react-native\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nimport { connect } from \"react-redux\";\nimport { firestore } from \"firebase\";\nimport * as FileSystem from \"expo-file-system\";\nimport { WebView } from \"react-native-webview\";\n\nconst PDFVIEW = () => {\n  return <WebView style={styles.webview} source={{ html: \"<h1>Hello<h1/>\" }} />;\n};\n\nclass QuizUpload extends React.Component {\n  state = {\n    fullPath: \"\",\n    downloadURL: \"\",\n    progress: 0,\n    uploading: false\n  };\n\n  pickDocumentPDF = async () => {\n    try {\n      const res = await DocumentPicker.getDocumentAsync({\n        type: \"application/pdf\"\n      });\n      //Printing the log realted to the file\n      console.log(\"res : \" + JSON.stringify(res));\n      console.log(\"Type : \" + res.type);\n      if (res.type === \"success\") {\n        this.setState({ uploading: true });\n        let that = this;\n        let getTime = new Date().getTime();\n        let storageRef = firebase.storage().ref();\n        let ref = storageRef.child(`/quiz/${getTime}-${res.name}`);\n        let fullPath = ref.fullPath;\n        let uploadTask = ref.putString(res.uri, \"data_url\");\n        // New Addintion\n        uploadTask.on(\n          \"state_changed\",\n          function(snapshot) {\n            // Observe state change events such as progress, pause, and resume\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            var progress =\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log(\"Upload is \" + progress + \"% done\");\n            that.setState({\n              progress: Math.round(progress)\n            });\n          },\n          function(error) {\n            // Handle unsuccessful uploads\n            console.error(error.message);\n            Alert.alert(error.message);\n          },\n          function() {\n            // Handle successful uploads on complete\n            let prevQuiz = that.props?.user?.quiz || [];\n            uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(function(downloadURL) {\n                prevQuiz.push({\n                  uploadTime: firestore.Timestamp.now(),\n                  pdfLink: downloadURL,\n                  storageAddress: fullPath\n                });\n                const db = firebase.firestore();\n                db.collection(\"tutors\")\n                  .doc(that.props.user?.id)\n                  .set({\n                    ...that.props.user,\n                    quiz: prevQuiz\n                  })\n                  .then(() => {\n                    that.setState({\n                      uploading: false,\n                      downloadURL,\n                      fullPath\n                    });\n                  })\n                  .catch(error => {\n                    console.error(error);\n                    Alert.alert(error.message);\n                  });\n              })\n              .catch(error => {\n                console.error(error);\n                Alert.alert(error.message);\n              });\n          }\n        );\n      }\n    } catch (err) {\n      alert(\"Unknown Error: \" + JSON.stringify(err));\n      throw err;\n    }\n  };\n\n  renderItem = ({ item, index }) => {\n    let createDate = new Date(item.uploadTime.seconds * 1000);\n\n    return (\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Quiz {index + 1} </Title>\n          <Paragraph>\n            Uploaded: {createDate.toLocaleTimeString()},{\" \"}\n            {createDate.toDateString()}{\" \"}\n          </Paragraph>\n          {/* <Paragraph>Time & Date</Paragraph> */}\n        </Card.Content>\n        {/* <Card.Cover source={{ uri: \"https://picsum.photos/700\" }} /> */}\n        <Card.Actions>\n          <Button onPress={this.downloadPDF}>DOWNLOAD</Button>\n        </Card.Actions>\n      </Card>\n    );\n  };\n\n  downloadPDF = link => {\n    FileSystem.downloadAsync(\n      \"http://techslides.com/demos/sample-videos/small.mp4\",\n      FileSystem.documentDirectory + \"small.mp4\"\n    )\n      .then(({ uri }) => {\n        console.log(\"Finished downloading to \", uri);\n      })\n      .catch(error => {\n        console.error(error);\n        Alert.alert(error);\n      });\n  };\n\n  render() {\n    let { user } = this.props;\n    console.log({ user });\n    return (\n      <View style={{ backgroundColor: \"pink\" }}>\n        <TouchableOpacity\n          style={styles.uploadBtn}\n          onPress={this.pickDocumentPDF}\n        >\n          <Text style={styles.buttonText}>\n            {this.state.uploading\n              ? `Uploading ${this.state.progress}%`\n              : \"Upload New\"}\n          </Text>\n        </TouchableOpacity>\n        {/* <TouchableOpacity>\n          <Button\n            style={{ flex: 1, backgroundColor: \"#4fc3f7\" }}\n            onPress={this.pickDocumentPDF}\n            disabled={this.state.uploading}\n          >\n            \n          </Button>\n        </TouchableOpacity> */}\n        {user?.quiz && (\n          // <SafeAreaView>\n          <FlatList\n            data={user.quiz}\n            renderItem={this.renderItem}\n            keyExtractor={item => item.pdfLink}\n          />\n          // {/* </SafeAreaView> */}\n        )}\n        <PDFVIEW />\n      </View>\n    );\n  }\n}\n\nconst mapStatetoProps = state => {\n  console.log({ state });\n  return {\n    user: state.authReducer.user,\n    isAuthenticated: state.authReducer.isAuthenticated\n  };\n};\nexport default connect(mapStatetoProps)(QuizUpload);\n\nconst styles = StyleSheet.create({\n  card: {\n    marginVertical: 10\n  },\n  webview: {\n    backgroundColor: \"yellow\",\n    height: 320,\n    width: 200\n  },\n  uploadBtn: {\n    flex: 1,\n    color: \"#fff\",\n    paddingVertical: 10,\n    backgroundColor: \"#4fc3f7\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}