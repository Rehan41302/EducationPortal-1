{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\React\\\\Arslan\\\\native\\\\components\\\\studentQuiz.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as FileSystem from 'expo-file-system';\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../config/fire\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { firestore } from \"firebase\";\n\nvar StudentQuiz = function (_React$Component) {\n  _inherits(StudentQuiz, _React$Component);\n\n  var _super = _createSuper(StudentQuiz);\n\n  function StudentQuiz() {\n    var _this;\n\n    _classCallCheck(this, StudentQuiz);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      uploading: false\n    };\n\n    _this.upload = function _callee(item, user) {\n      var res, that, getTime, storageRef, ref, fullPath, uploadTask;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({\n                type: \"application/pdf\"\n              }));\n\n            case 3:\n              res = _context.sent;\n              console.log(\"res : \" + JSON.stringify(res));\n              console.log(\"Type : \" + res.type);\n\n              if (res.type === \"success\") {\n                _this.setState({\n                  uploading: true\n                });\n\n                that = _assertThisInitialized(_this);\n                getTime = new Date().getTime();\n                storageRef = firebase.storage().ref();\n                ref = storageRef.child(\"/studentQuiz/\" + getTime + \"-\" + res.name);\n                fullPath = ref.fullPath;\n                uploadTask = ref.putString(res.uri, \"data_url\");\n                uploadTask.on(\"state_changed\", function (snapshot) {\n                  var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                  console.log(\"Upload is \" + progress + \"% done\");\n                  that.setState({\n                    progress: Math.round(progress)\n                  });\n                }, function (error) {\n                  console.error(error.message);\n                  Alert.alert(error.message);\n                }, function () {\n                  console.log('api func');\n                  var prevQuiz = [];\n                  uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    console.log(downloadURL);\n                    prevQuiz.push({\n                      uploadTime: firestore.Timestamp.now(),\n                      pdfLink: downloadURL,\n                      storageAddress: fullPath\n                    });\n                    console.log('1st then', prevQuiz, item);\n                    var db = firebase.firestore();\n                    db.collection(\"studentQuiz\").doc(user == null ? void 0 : user.id).set({\n                      student: user == null ? void 0 : user.name,\n                      tutor: item == null ? void 0 : item.id,\n                      quiz: prevQuiz,\n                      subject: item == null ? void 0 : item.subject\n                    }).then(function (res) {\n                      that.setState({\n                        uploading: false,\n                        downloadURL: downloadURL,\n                        fullPath: fullPath\n                      });\n                      console.log(res);\n                    }).catch(function (error) {\n                      console.error(error);\n                      Alert.alert(error.message);\n                    });\n                  }).catch(function (error) {\n                    console.error(error);\n                    Alert.alert(error.message);\n                  });\n                });\n              }\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              alert(\"Unknown Error: \" + JSON.stringify(_context.t0));\n              throw _context.t0;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      console.log(item);\n      return React.createElement(Card, {\n        style: styles.card,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, React.createElement(Card.Content, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, React.createElement(Title, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, \"Teacher : \", item.name, \" \"), React.createElement(Title, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, \"Subject : \", item.subject, \"  \"), (item == null ? void 0 : item.quiz) && item.quiz.map(function (quiz, index) {\n        console.log(quiz.pdfLink);\n        var co = 'https://nextjs.org/docs/deployment';\n        return React.createElement(Card.Actions, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }\n        }, (item == null ? void 0 : item.quiz) && React.createElement(Button, {\n          onPress: function onPress() {\n            return _this.upload(item, _this.props.user);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }\n        }, \"Upload \"));\n      })), React.createElement(Card.Actions, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, (item == null ? void 0 : item.quiz) && React.createElement(Button, {\n        onPress: function onPress() {\n          return _this.upload(item, _this.props.user);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, \"Upload \")));\n    };\n\n    return _this;\n  }\n\n  _createClass(StudentQuiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$user;\n\n      var doc = firebase.firestore().collection(\"studentQuiz\").doc((_this$props$user = this.props.user) == null ? void 0 : _this$props$user.id).get();\n      if (doc.exists) console.log(doc.data());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$tutors, _this$props$tutors2, _this$props$tutors3;\n\n      console.log((_this$props$tutors = this.props.tutors) == null ? void 0 : _this$props$tutors.data, 'tutorsol');\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 5\n        }\n      }, ((_this$props$tutors2 = this.props.tutors) == null ? void 0 : _this$props$tutors2.data.length) > 0 ? React.createElement(FlatList, {\n        data: (_this$props$tutors3 = this.props.tutors) == null ? void 0 : _this$props$tutors3.data,\n        renderItem: this.renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 3\n        }\n      }) : React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 1\n        }\n      }, \"Loading...\"));\n    }\n  }]);\n\n  return StudentQuiz;\n}(React.Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  console.log({\n    state: state\n  });\n  return {\n    tutors: state.tutorReducer.tutors,\n    isAuthenticated: state.authReducer.isAuthenticated,\n    user: state.authReducer.user\n  };\n};\n\nexport default connect(mapStatetoProps)(StudentQuiz);\nvar styles = StyleSheet.create({\n  htext: {\n    marginTop: 9,\n    marginBottom: 52,\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 26,\n    marginHorizontal: 32\n  },\n  container: {\n    backgroundColor: '#F4F6F6'\n  },\n  student: {\n    marginTop: 9,\n    marginBottom: 42,\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 20,\n    marginHorizontal: 52\n  }\n});","map":{"version":3,"sources":["E:/React/Arslan/native/components/studentQuiz.js"],"names":["React","FileSystem","Avatar","Button","Card","Title","Paragraph","connect","firebase","DocumentPicker","firestore","StudentQuiz","state","uploading","upload","item","user","getDocumentAsync","type","res","console","log","JSON","stringify","setState","that","getTime","Date","storageRef","storage","ref","child","name","fullPath","uploadTask","putString","uri","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","error","message","Alert","alert","prevQuiz","getDownloadURL","then","downloadURL","push","uploadTime","Timestamp","now","pdfLink","storageAddress","db","collection","doc","id","set","student","tutor","quiz","subject","catch","renderItem","index","styles","card","map","co","props","get","exists","data","tutors","length","Component","mapStatetoProps","tutorReducer","isAuthenticated","authReducer","StyleSheet","create","htext","marginTop","marginBottom","color","fontWeight","fontSize","marginHorizontal","container","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import { Text, View,Linking, StyleSheet, Button,ScrollView,TextInput,TouchableOpacity, } from 'react-native';\r\nimport * as FileSystem from 'expo-file-system'\r\nimport { Avatar, Button, Card, Title, Paragraph,} from \"react-native-paper\";\r\nimport {View,Text,FlatList, StyleSheet, Alert,ScrollView, Linking} from 'react-native'\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../config/fire\";\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\nimport { firestore } from \"firebase\";\r\n\r\n// import {FileSystem} from 'expo-file-system'\r\nclass StudentQuiz extends React.Component{\r\n state={\r\n   uploading:false\r\n }\r\n\r\n componentDidMount() {\r\n  const doc = firebase.firestore().collection(\"studentQuiz\")\r\n  .doc(this.props.user?.id)\r\n  .get();\r\nif (doc.exists) console.log(doc.data());\r\n }\r\n  \r\n// upload=(item)=>{\r\n//  try {\r\n//   const res = await DocumentPicker.getDocumentAsync({\r\n//     type: \"application/pdf\"\r\n//   });\r\n//   console.log('clicked',item)\r\n//   const db = firebase.firestore()\r\n//   db.collection('studentQuiz')\r\n//   .doc(this.props.user?.id)\r\n//   .set({student:this.props.user?.id,tutor:item.id})\r\n// }\r\n// catch(e){\r\n//   console.log(e.message)\r\n// }\r\n// }\r\nupload = async (item,user) => {\r\n  try {\r\n    const res = await DocumentPicker.getDocumentAsync({\r\n      type: \"application/pdf\"\r\n    });\r\n    //Printing the log realted to the file\r\n    console.log(\"res : \" + JSON.stringify(res));\r\n    console.log(\"Type : \" + res.type);\r\n    if (res.type === \"success\") {\r\n      this.setState({ uploading: true });\r\n      let that = this;\r\n      let getTime = new Date().getTime();\r\n      let storageRef = firebase.storage().ref();\r\n      let ref = storageRef.child(`/studentQuiz/${getTime}-${res.name}`);\r\n      let fullPath = ref.fullPath;\r\n      let uploadTask = ref.putString(res.uri, \"data_url\");\r\n      // New Addintion\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        function(snapshot) {\r\n          // Observe state change events such as progress, pause, and resume\r\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n          var progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log(\"Upload is \" + progress + \"% done\");\r\n          that.setState({\r\n            progress: Math.round(progress)\r\n          });\r\n        },\r\n        function(error) {\r\n          // Handle unsuccessful uploads\r\n          console.error(error.message);\r\n          Alert.alert(error.message);\r\n        },\r\n        function() {\r\n          console.log('api func')\r\n          // Handle successful uploads on complete\r\n          // let prevQuiz = that.props?.user?.quiz || [];\r\n          let prevQuiz =  []; \r\n          uploadTask.snapshot.ref.getDownloadURL()            \r\n            .then(function(downloadURL) {\r\n              console.log(downloadURL)\r\n              prevQuiz.push({\r\n                uploadTime: firestore.Timestamp.now(),\r\n                pdfLink: downloadURL,\r\n                storageAddress: fullPath\r\n              });\r\n              console.log('1st then',prevQuiz,item)\r\n              const db = firebase.firestore();\r\n              db.collection(\"studentQuiz\")\r\n                .doc(user?.id)\r\n                .set({\r\n                  student:user?.name,  \r\n                  tutor:item?.id,\r\n                  quiz: prevQuiz,\r\n                  subject:item?.subject\r\n                })\r\n                .then((res) => {\r\n                  that.setState({\r\n                    uploading: false,\r\n                    downloadURL,\r\n                    fullPath\r\n                  });\r\n                  console.log(res)\r\n                })\r\n                .catch(error => {\r\n                  console.error(error);\r\n                  Alert.alert(error.message);\r\n                });\r\n            })\r\n            .catch(error => {\r\n              console.error(error);\r\n              Alert.alert(error.message);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  } catch (err) {\r\n    alert(\"Unknown Error: \" + JSON.stringify(err));\r\n    throw err;\r\n  }\r\n};\r\n  renderItem = ({ item, index }) => {\r\n    // let createDate = new Date(item.uploadTime.seconds * 1000);\r\nconsole.log(item)\r\n    return (\r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Title>Teacher : {item.name} </Title>\r\n          <Title>Subject : {item.subject}  </Title>\r\n\r\n            {item?.quiz&& item.quiz.map((quiz,index)=>{\r\n              console.log(quiz.pdfLink)\r\n              let co = 'https://nextjs.org/docs/deployment'\r\n              return (\r\n                  <Card.Actions>\r\n            \r\n                  {item?.quiz&&\r\n                  <Button onPress={()=>this.upload(item,this.props.user)}>Upload </Button>\r\n                  }\r\n                </Card.Actions>\r\n                )\r\n            })}\r\n          {/* <Paragraph>Time & Date</Paragraph> */}\r\n        </Card.Content>\r\n        {/* <Card.Cover source={{ uri: \"https://picsum.photos/700\" }} /> */}\r\n        <Card.Actions>\r\n           \r\n          {item?.quiz&&\r\n          <Button onPress={()=>this.upload(item,this.props.user)}>Upload </Button>\r\n          }\r\n        </Card.Actions>\r\n      </Card>\r\n    );\r\n  };\r\n    render(){\r\n      console.log(this.props.tutors?.data,'tutorsol')\r\n   return(\r\n    <ScrollView>\r\n   \r\n  {this.props.tutors?.data.length>0?\r\n  <FlatList\r\n    data={this.props.tutors?.data}\r\n    renderItem={this.renderItem}\r\n    // keyExtractor={item => item.pdfLink}\r\n  />\r\n:\r\n<Text>Loading...</Text>\r\n}\r\n\r\n  </ScrollView> \r\n  ) \r\n\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  console.log({ state });\r\n  return {\r\n    tutors: state.tutorReducer.tutors,\r\n    isAuthenticated: state.authReducer.isAuthenticated,  \r\n    user: state.authReducer.user,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps)(StudentQuiz)\r\nconst styles = StyleSheet.create({\r\nhtext:{\r\n     marginTop:9,\r\n     marginBottom:52,\r\n     color:'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 26,\r\n    marginHorizontal:32\r\n\r\n  },\r\n  container:{\r\n \r\n    backgroundColor:'#F4F6F6',\r\n    \r\n  },\r\n  \r\nstudent:{\r\n     marginTop:9,\r\n     marginBottom:42,\r\n     color:'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 20,\r\n    marginHorizontal:52\r\n\r\n}})"]},"metadata":{},"sourceType":"module"}