{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/denoversshehroz/Documents/React Native/Rehan/EducationPortal/components/quiz.js\";\n\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nvar Quiz = function Quiz() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      singleFile = _useState2[0],\n      setSingleFile = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      multipleFile = _useState4[0],\n      setMultipleFile = _useState4[1];\n\n  var selectOneFile = function selectOneFile() {\n    var res;\n    return _regeneratorRuntime.async(function selectOneFile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({\n              type: \"application/pdf\"\n            }));\n\n          case 3:\n            res = _context.sent;\n            console.log(\"res : \" + JSON.stringify(res));\n            console.log(\"URI : \" + res.uri);\n            console.log(\"Type : \" + res.type);\n            console.log(\"File Name : \" + res.name);\n            console.log(\"File Size : \" + res.size);\n            setSingleFile(res);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"Unknown Error: \" + JSON.stringify(_context.t0));\n            throw _context.t0;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Example of File Picker in React Native\"), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.buttonStyle,\n    onPress: selectOneFile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginRight: 10,\n      fontSize: 19\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Click here to pick one file\"), React.createElement(Image, {\n    source: {\n      uri: \"https://img.icons8.com/offices/40/000000/attach.png\"\n    },\n    style: styles.imageIconStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"File Name: \", singleFile.name ? singleFile.name : \"\", \"\\n\", \"Type: \", singleFile.type ? singleFile.type : \"\", \"\\n\", \"File Size: \", singleFile.size ? singleFile.size : \"\", \"\\n\", \"URI: \", singleFile.uri ? singleFile.uri : \"\", \"\\n\"), React.createElement(View, {\n    style: {\n      backgroundColor: \"grey\",\n      height: 2,\n      margin: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.buttonStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginRight: 10,\n      fontSize: 19\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Click here to pick multiple files\"), React.createElement(Image, {\n    source: {\n      uri: \"https://img.icons8.com/offices/40/000000/attach.png\"\n    },\n    style: styles.imageIconStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, multipleFile.map(function (item, key) {\n    return React.createElement(View, {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.textStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"File Name: \", item.name ? item.name : \"\", \"\\n\", \"Type: \", item.type ? item.type : \"\", \"\\n\", \"File Size: \", item.size ? item.size : \"\", \"\\n\", \"URI: \", item.uri ? item.uri : \"\", \"\\n\"));\n  }))));\n};\n\nexport default Quiz;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 16\n  },\n  titleText: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    paddingVertical: 20\n  },\n  textStyle: {\n    backgroundColor: \"#fff\",\n    fontSize: 15,\n    marginTop: 16,\n    color: \"black\"\n  },\n  buttonStyle: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 5\n  },\n  imageIconStyle: {\n    height: 20,\n    width: 20,\n    resizeMode: \"stretch\"\n  }\n});","map":{"version":3,"sources":["/Users/denoversshehroz/Documents/React Native/Rehan/EducationPortal/components/quiz.js"],"names":["React","useState","DocumentPicker","Quiz","singleFile","setSingleFile","multipleFile","setMultipleFile","selectOneFile","getDocumentAsync","type","res","console","log","JSON","stringify","uri","name","size","alert","flex","styles","titleText","container","buttonStyle","marginRight","fontSize","imageIconStyle","textStyle","backgroundColor","height","margin","map","item","key","StyleSheet","create","padding","fontWeight","textAlign","paddingVertical","marginTop","color","alignItems","flexDirection","width","resizeMode"],"mappings":"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","sourcesContent":["// Import React\nimport React, { useState } from \"react\";\n// Import required components\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  ScrollView,\n  Image\n} from \"react-native\";\n\n// Import Document Picker\nimport * as DocumentPicker from \"expo-document-picker\";\n\nconst Quiz = () => {\n  const [singleFile, setSingleFile] = useState(\"\");\n  const [multipleFile, setMultipleFile] = useState([]);\n\n  const selectOneFile = async () => {\n    //Opening Document Picker for selection of one file\n    try {\n      const res = await DocumentPicker.getDocumentAsync({\n        type: \"application/pdf\"\n        //There can me more options as well\n        // DocumentPicker.types.allFiles\n        // DocumentPicker.types.images\n        // DocumentPicker.types.plainText\n        // DocumentPicker.types.audio\n        // DocumentPicker.types.pdf\n      });\n      //Printing the log realted to the file\n      console.log(\"res : \" + JSON.stringify(res));\n      console.log(\"URI : \" + res.uri);\n      console.log(\"Type : \" + res.type);\n      console.log(\"File Name : \" + res.name);\n      console.log(\"File Size : \" + res.size);\n      //Setting the state to show single file attributes\n      setSingleFile(res);\n    } catch (err) {\n      alert(\"Unknown Error: \" + JSON.stringify(err));\n      throw err;\n    }\n  };\n  //   };\n\n  //   const selectMultipleFile = async () => {\n  //     //Opening Document Picker for selection of multiple file\n  //     try {\n  //       const results = await DocumentPicker.pickMultiple({\n  //         type: [DocumentPicker.types.images]\n  //         //There can me more options as well find above\n  //       });\n  //       for (const res of results) {\n  //         //Printing the log realted to the file\n  //         console.log(\"res : \" + JSON.stringify(res));\n  //         console.log(\"URI : \" + res.uri);\n  //         console.log(\"Type : \" + res.type);\n  //         console.log(\"File Name : \" + res.name);\n  //         console.log(\"File Size : \" + res.size);\n  //       }\n  //       //Setting the state to show multiple file attributes\n  //       setMultipleFile(results);\n  //     } catch (err) {\n  //       //Handling any exception (If any)\n  //       if (DocumentPicker.isCancel(err)) {\n  //         //If user canceled the document selection\n  //         alert(\"Canceled from multiple doc picker\");\n  //       } else {\n  //         //For Unknown Error\n  //         alert(\"Unknown Error: \" + JSON.stringify(err));\n  //         throw err;\n  //       }\n  //     }\n  //   };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <Text style={styles.titleText}>\n        Example of File Picker in React Native\n      </Text>\n      <View style={styles.container}>\n        {/*To show single file attribute*/}\n        <TouchableOpacity\n          activeOpacity={0.5}\n          style={styles.buttonStyle}\n          onPress={selectOneFile}\n        >\n          {/*Single file selection button*/}\n          <Text style={{ marginRight: 10, fontSize: 19 }}>\n            Click here to pick one file\n          </Text>\n          <Image\n            source={{\n              uri: \"https://img.icons8.com/offices/40/000000/attach.png\"\n            }}\n            style={styles.imageIconStyle}\n          />\n        </TouchableOpacity>\n        {/*Showing the data of selected Single file*/}\n        <Text style={styles.textStyle}>\n          File Name: {singleFile.name ? singleFile.name : \"\"}\n          {\"\\n\"}\n          Type: {singleFile.type ? singleFile.type : \"\"}\n          {\"\\n\"}\n          File Size: {singleFile.size ? singleFile.size : \"\"}\n          {\"\\n\"}\n          URI: {singleFile.uri ? singleFile.uri : \"\"}\n          {\"\\n\"}\n        </Text>\n        <View style={{ backgroundColor: \"grey\", height: 2, margin: 10 }} />\n        {/*To multiple single file attribute*/}\n        <TouchableOpacity\n          activeOpacity={0.5}\n          style={styles.buttonStyle}\n          //   onPress={selectMultipleFile}\n        >\n          {/*Multiple files selection button*/}\n          <Text style={{ marginRight: 10, fontSize: 19 }}>\n            Click here to pick multiple files\n          </Text>\n          <Image\n            source={{\n              uri: \"https://img.icons8.com/offices/40/000000/attach.png\"\n            }}\n            style={styles.imageIconStyle}\n          />\n        </TouchableOpacity>\n        <ScrollView>\n          {/*Showing the data of selected Multiple files*/}\n          {multipleFile.map((item, key) => (\n            <View key={key}>\n              <Text style={styles.textStyle}>\n                File Name: {item.name ? item.name : \"\"}\n                {\"\\n\"}\n                Type: {item.type ? item.type : \"\"}\n                {\"\\n\"}\n                File Size: {item.size ? item.size : \"\"}\n                {\"\\n\"}\n                URI: {item.uri ? item.uri : \"\"}\n                {\"\\n\"}\n              </Text>\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default Quiz;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 16\n  },\n  titleText: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    paddingVertical: 20\n  },\n  textStyle: {\n    backgroundColor: \"#fff\",\n    fontSize: 15,\n    marginTop: 16,\n    color: \"black\"\n  },\n  buttonStyle: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 5\n  },\n  imageIconStyle: {\n    height: 20,\n    width: 20,\n    resizeMode: \"stretch\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}