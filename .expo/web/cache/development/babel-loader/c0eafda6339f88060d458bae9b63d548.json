{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\React\\\\Arslan\\\\native\\\\components\\\\availableTutors.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nimport firebase from \"../config/fire\";\n\nvar AvailableTutors = function (_React$Component) {\n  _inherits(AvailableTutors, _React$Component);\n\n  var _super = _createSuper(AvailableTutors);\n\n  function AvailableTutors() {\n    _classCallCheck(this, AvailableTutors);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AvailableTutors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      firebase.firestore().collection(\"tutors\").get().then(function (res) {\n        res.docs.forEach(function (doc) {\n          var items = doc.data();\n          items = JSON.stringify(items);\n          console.log(items, 'av');\n        });\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"HElo\"));\n    }\n  }]);\n\n  return AvailableTutors;\n}(React.Component);\n\nexport { AvailableTutors as default };","map":{"version":3,"sources":["E:/React/Arslan/native/components/availableTutors.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","firebase","AvailableTutors","firestore","collection","get","then","res","docs","forEach","doc","items","data","JSON","stringify","console","log","catch","err","message","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,OAAOC,QAAP;;IAEqBC,e;;;;;;;;;;;;;wCACG;AACfD,MAAAA,QAAQ,CAACE,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,EACAC,GADA,GACMC,IADN,CACW,UAAAC,GAAG,EAAE;AACbA,QAAAA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,UAAAC,GAAG,EAAI;AACpB,cAAIC,KAAK,GAAGD,GAAG,CAACE,IAAJ,EAAZ;AAGAD,UAAAA,KAAK,GAAGE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAR;AAGAI,UAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkB,IAAlB;AAEH,SATD;AASY,OAXf,EAYAM,KAZA,CAYM,UAAAC,GAAG;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB,CAAJ;AAAA,OAZT;AAaJ;;;6BAuBO;AACJ,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CADJ;AAIH;;;;EA3CwCxB,KAAK,CAACyB,S;;SAA9BlB,e","sourcesContent":["import React from 'react';\r\nimport {View,Text} from 'react-native'\r\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\r\nimport firebase from \"../config/fire\";\r\n\r\nexport default class AvailableTutors extends React.Component{\r\n    componentDidMount() {\r\n         firebase.firestore().collection(\"tutors\")\r\n        .get().then(res=>{\r\n            res.docs.forEach(doc => {\r\n                let items = doc.data();\r\n      \r\n                /* Make data suitable for rendering */\r\n                items = JSON.stringify(items);\r\n      \r\n                /* Update the components state with query result */\r\n                console.log(items,'av')\r\n                // this.setState({ items : items }) \r\n            });        })\r\n        .catch(err => console.log(err.message))\r\n    }\r\n\r\n    // renderItem = ({ item, index }) => {\r\n    //     let createDate = new Date(item.uploadTime.seconds * 1000);\r\n    \r\n    //     return (\r\n    //       <Card style={styles.card}>\r\n    //         <Card.Content>\r\n    //           <Title>Quiz {index + 1} </Title>\r\n    //           <Paragraph>\r\n    //             Uploaded: {createDate.toLocaleTimeString()},{\" \"}\r\n    //             {createDate.toDateString()}{\" \"}\r\n    //           </Paragraph>\r\n    //           {/* <Paragraph>Time & Date</Paragraph> */}\r\n    //         </Card.Content>\r\n    //         {/* <Card.Cover source={{ uri: \"https://picsum.photos/700\" }} /> */}\r\n    //         <Card.Actions>\r\n    //           <Button onPress={this.downloadPDF}>DOWNLOAD</Button>\r\n    //         </Card.Actions>\r\n    //       </Card>\r\n    //     );\r\n    //   };\r\n    \r\n    render(){\r\n        return(\r\n            <View>\r\n            <Text>HElo</Text>\r\n          </View> )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}