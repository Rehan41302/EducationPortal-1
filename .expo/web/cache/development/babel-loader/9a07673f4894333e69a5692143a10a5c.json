{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\React\\\\Arslan\\\\native\\\\components\\\\StudentRegister.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\n\nvar StudentRegister = function (_React$Component) {\n  _inherits(StudentRegister, _React$Component);\n\n  var _super = _createSuper(StudentRegister);\n\n  function StudentRegister() {\n    var _this;\n\n    _classCallCheck(this, StudentRegister);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      subject: '',\n      level: '',\n      contactNumber: Number,\n      error: {}\n    };\n\n    _this.isValid = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          contactNumber = _this$state.contactNumber,\n          level = _this$state.level,\n          subject = _this$state.subject;\n      var noError = true;\n\n      if (!name || !contactNumber || !level || !subject) {\n        _this.setState(function (_ref) {\n          var errors = _ref.errors;\n          return {\n            errors: _objectSpread(_objectSpread({}, errors), {}, {\n              emptyError: \"All Fields are required.\"\n            })\n          };\n        });\n\n        noError = false;\n      }\n\n      return noError;\n    };\n\n    _this.uploadStudentDetails = function () {\n      console.log(\"clicked\", _this.state);\n\n      _this.setState({\n        errors: {}\n      });\n\n      var _this$state2 = _this.state,\n          name = _this$state2.name,\n          contactNumber = _this$state2.contactNumber,\n          level = _this$state2.level,\n          subject = _this$state2.subject;\n      console.log({\n        isValid: _this.isValid()\n      });\n\n      if (_this.isValid()) {\n        _this.setState({\n          loading: true\n        });\n\n        var db = firebase.firestore();\n        db.collection(\"students\").doc(_this.props.user.id).set({\n          name: name,\n          contactNumber: contactNumber,\n          level: level,\n          subject: subject,\n          createTime: firestore.Timestamp.now()\n        }).then(function (res) {\n          store.dispatch(addUserDetailsAction(_objectSpread(_objectSpread({}, _this.props.user), {}, {\n            name: name,\n            contactNumber: contactNumber,\n            level: level,\n            subject: subject\n          })));\n          console.log(\"res---\", res);\n          setTimeout(function () {\n            _this.clearInputs();\n\n            _this.setState({\n              loading: false\n            });\n\n            _this.props.navigation.replace(\"Student Profile\");\n          }, 100);\n        }).catch(function (error) {\n          console.error(error.message);\n\n          _this.setState({\n            loading: false\n          });\n\n          Alert.alert(error.message);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StudentRegister, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          name = _this$state3.name,\n          contactNumber = _this$state3.contactNumber,\n          level = _this$state3.level,\n          subject = _this$state3.subject;\n      return React.createElement(ImageBackground, {\n        style: styles.image,\n        source: require(\"../assets/image/studentregisterpic.jpg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 10\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: styles.htext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, \"Student Registration\"), React.createElement(TextInput, {\n        style: styles.inputBox,\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"Student Name\",\n        placeholderTextColor: \"#ffffff\",\n        selectionColor: \"#fff\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            name: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"Interested for subject\",\n        placeholderTextColor: \"#ffffff\",\n        selectionColor: \"#fff\",\n        value: subject,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            subject: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 2\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"student class level\",\n        placeholderTextColor: \"#ffffff\",\n        selectionColor: \"#fff\",\n        value: level,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            level: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"student contact no\",\n        placeholderTextColor: \"#ffffff\",\n        selectionColor: \"#fff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('studentlogin');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 14\n        }\n      }, \"Register\"))));\n    }\n  }]);\n\n  return StudentRegister;\n}(React.Component);\n\nexport { StudentRegister as default };\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  inputBox: {\n    width: 200,\n    backgroundColor: 'grey',\n    borderRadius: 25,\n    marginLeft: 6,\n    marginBottom: 8,\n    paddingHorizontal: 19,\n    fontSize: 16,\n    color: '#ffffff',\n    marginVertical: 3\n  },\n  button: {\n    width: 160,\n    backgroundColor: \"#2196F3\",\n    borderRadius: 25,\n    marginVertical: 10,\n    paddingVertical: 13,\n    marginHorizontal: 6\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: 'white',\n    textAlign: 'center'\n  },\n  htext: {\n    marginTop: 9,\n    marginBottom: 72,\n    fontWeight: 'bold',\n    fontSize: 26,\n    marginHorizontal: 22\n  }\n});","map":{"version":3,"sources":["E:/React/Arslan/native/components/StudentRegister.js"],"names":["React","StudentRegister","state","name","subject","level","contactNumber","Number","error","isValid","noError","setState","errors","emptyError","uploadStudentDetails","console","log","loading","db","firebase","firestore","collection","doc","props","user","id","set","createTime","Timestamp","now","then","res","store","dispatch","addUserDetailsAction","setTimeout","clearInputs","navigation","replace","catch","message","Alert","alert","styles","image","require","htext","inputBox","text","button","navigate","buttonText","Component","StyleSheet","create","width","height","backgroundColor","borderRadius","marginLeft","marginBottom","paddingHorizontal","fontSize","color","marginVertical","paddingVertical","marginHorizontal","fontWeight","textAlign","marginTop"],"mappings":"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","sourcesContent":["\r\nimport * as React from 'react';\r\nimport { Text, View, StyleSheet, Image,ScrollView,TextInput,TouchableOpacity,ImageBackground,Button,StatusBar } from 'react-native';\r\n\r\nexport default class StudentRegister extends React.Component{\r\n  state={\r\n    name:'',\r\n    subject:'',\r\n    level:'',\r\n    contactNumber:Number,\r\n    error:{},\r\n\r\n  }\r\n  isValid = () => {\r\n    const { name, contactNumber, level, subject } = this.state;\r\n    let noError = true;\r\n    if (!name || !contactNumber || !level || !subject) {\r\n      this.setState(({ errors }) => ({\r\n        errors: { ...errors, emptyError: \"All Fields are required.\" }\r\n      }));\r\n      noError = false;\r\n    }\r\n    return noError;\r\n  };\r\n\r\n  uploadStudentDetails = () => {\r\n    console.log(\"clicked\", this.state);\r\n    this.setState({ errors: {} });\r\n    const { name, contactNumber, level, subject } = this.state;\r\n    // this.clearInputs();\r\n    console.log({ isValid: this.isValid() });\r\n    if (this.isValid()) {\r\n      this.setState({ loading: true });\r\n      const db = firebase.firestore();\r\n      db.collection(\"students\")\r\n        .doc(this.props.user.id)\r\n        .set({\r\n          name,\r\n          contactNumber,\r\n          level,\r\n          subject,\r\n          createTime: firestore.Timestamp.now()\r\n        })\r\n        .then(res => {\r\n          store.dispatch(\r\n            addUserDetailsAction({\r\n              ...this.props.user,\r\n              name,\r\n              contactNumber,\r\n              level,\r\n              subject\r\n            })\r\n          );\r\n          console.log(\"res---\", res);\r\n          setTimeout(() => {\r\n            this.clearInputs();\r\n            this.setState({ loading: false });\r\n            this.props.navigation.replace(\"Student Profile\");\r\n          }, 100);\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n          this.setState({ loading: false });\r\n          Alert.alert(error.message);\r\n        });\r\n    }\r\n  };\r\n     render(){\r\n    const { name, contactNumber, level, subject } = this.state;\r\n\r\n       return(\r\n     \r\n         <ImageBackground style={styles.image} source={require('../assets/image/studentregisterpic.jpg')}>\r\n         \r\n         <ScrollView>\r\n          <Text style={styles.htext}>Student Registration</Text>\r\n           <TextInput style={styles.inputBox}  underlineColorAndroid='rgba(0,0,0,0)' \r\n              placeholder=\"Student Name\"\r\n              placeholderTextColor = \"#ffffff\"\r\n              selectionColor=\"#fff\"\r\n              value={name}\r\n              onChangeText={text => {\r\n                this.setState({ name: text });\r\n              }}\r\n              />\r\n\r\n <TextInput style={styles.inputBox}  underlineColorAndroid='rgba(0,0,0,0)' \r\n              placeholder=\"Interested for subject\"\r\n              placeholderTextColor = \"#ffffff\"\r\n              selectionColor=\"#fff\"\r\n              value={subject}\r\n              onChangeText={text => {\r\n                this.setState({ subject: text });\r\n              }}\r\n              />\r\n              \r\n              <TextInput style={styles.inputBox}  underlineColorAndroid='rgba(0,0,0,0)' \r\n              placeholder=\"student class level\"\r\n              placeholderTextColor = \"#ffffff\"\r\n              selectionColor=\"#fff\"\r\n              value={level}\r\n              onChangeText={text => {\r\n                this.setState({ level: text });\r\n              }}\r\n              />\r\n\r\n              <TextInput style={styles.inputBox}  underlineColorAndroid='rgba(0,0,0,0)' \r\n              placeholder=\"student contact no\"\r\n              placeholderTextColor = \"#ffffff\"\r\n              selectionColor=\"#fff\"\r\n              \r\n              />\r\n              <TouchableOpacity style={styles.button}  onPress={() => this.props.navigation.navigate('studentlogin')}>\r\n             <Text style={styles.buttonText}>Register</Text>\r\n           </TouchableOpacity> \r\n         </ScrollView>\r\n         \r\n         </ImageBackground>\r\n         \r\n       )\r\n     }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n \r\n  \r\n  image:{\r\n   \r\n    width:'100%',\r\n    height:'100%'\r\n  },\r\n  inputBox: {\r\n    width:200,\r\n    backgroundColor:'grey',\r\n    borderRadius: 25,\r\n    marginLeft:6,\r\n    marginBottom:8,\r\n    paddingHorizontal:19,\r\n    fontSize:16,\r\n    color:'#ffffff',\r\n    marginVertical: 3,\r\n  \r\n  },\r\n   button: {\r\n    width:160,\r\n    backgroundColor:\"#2196F3\",\r\n     borderRadius: 25,\r\n      marginVertical: 10,\r\n      paddingVertical: 13,\r\n      marginHorizontal:6\r\n  },\r\n  buttonText: {\r\n    fontSize:16,\r\n    fontWeight:'500',\r\n    color:'white',\r\n    textAlign:'center'\r\n  },\r\n  htext:{\r\n     marginTop:9,\r\n     marginBottom:72,\r\n    fontWeight: 'bold',\r\n    fontSize: 26,\r\n    marginHorizontal:22\r\n\r\n  }\r\n  });"]},"metadata":{},"sourceType":"module"}