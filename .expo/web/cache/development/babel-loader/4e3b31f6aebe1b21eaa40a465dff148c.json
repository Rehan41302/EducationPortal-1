{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\React\\\\Arslan\\\\native\\\\components\\\\availableTutors.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\n\nvar AvailableTutors = function (_React$Component) {\n  _inherits(AvailableTutors, _React$Component);\n\n  var _super = _createSuper(AvailableTutors);\n\n  function AvailableTutors() {\n    var _this;\n\n    _classCallCheck(this, AvailableTutors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var createDate = new Date(item.uploadTime.seconds * 1000);\n      return React.createElement(Card, {\n        style: styles.card,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, React.createElement(Card.Content, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, React.createElement(Title, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }\n      }, \"Quiz \", index + 1, \" \"), React.createElement(Paragraph, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }\n      }, \"Uploaded: \", createDate.toLocaleTimeString(), \",\", \" \", createDate.toDateString(), \" \")), React.createElement(Card.Actions, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        onPress: _this.downloadPDF,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, \"DOWNLOAD\")));\n    };\n\n    return _this;\n  }\n\n  _createClass(AvailableTutors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _user;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#4fc3f7\"\n        },\n        onPress: this.pickDocumentPDF,\n        disabled: this.state.uploading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"\\\"Upload New\"), ((_user = user) == null ? void 0 : _user.quiz) && React.createElement(FlatList, {\n        data: user.quiz,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.pdfLink;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }));\n    }\n  }]);\n\n  return AvailableTutors;\n}(React.Component);\n\nexport { AvailableTutors as default };","map":{"version":3,"sources":["E:/React/Arslan/native/components/availableTutors.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","AvailableTutors","renderItem","item","index","createDate","Date","uploadTime","seconds","styles","card","toLocaleTimeString","toDateString","downloadPDF","flex","backgroundColor","pickDocumentPDF","state","uploading","user","quiz","pdfLink","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,QAAuD,oBAAvD;;IACqBC,e;;;;;;;;;;;;;;;;UAKjBC,U,GAAa,gBAAqB;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;AAC9B,UAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAACI,UAAL,CAAgBC,OAAhB,GAA0B,IAAnC,CAAjB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaN,KAAK,GAAG,CAArB,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACaC,UAAU,CAACM,kBAAX,EADb,OAC+C,GAD/C,EAEGN,UAAU,CAACO,YAAX,EAFH,EAE8B,GAF9B,CAFF,CADF,EAUE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAVF,CADF;AAgBD,K;;;;;;;wCAvBiB,CAEnB;;;6BAuBO;AAAA;;AACJ,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,eAAe,EAAE;AAA5B,SADT;AAEE,QAAA,OAAO,EAAE,KAAKC,eAFhB;AAGE,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,SAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EASC,UAAAC,IAAI,SAAJ,kBAAMC,IAAN,KAEC,oBAAC,QAAD;AACE,QAAA,IAAI,EAAED,IAAI,CAACC,IADb;AAEE,QAAA,UAAU,EAAE,KAAKlB,UAFnB;AAGE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACkB,OAAT;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADJ;AAoBH;;;;EA/CwC1B,KAAK,CAAC2B,S;;SAA9BrB,e","sourcesContent":["import React from 'react';\r\nimport {View,Text} from 'react-native'\r\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\r\nexport default class AvailableTutors extends React.Component{\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    renderItem = ({ item, index }) => {\r\n        let createDate = new Date(item.uploadTime.seconds * 1000);\r\n    \r\n        return (\r\n          <Card style={styles.card}>\r\n            <Card.Content>\r\n              <Title>Quiz {index + 1} </Title>\r\n              <Paragraph>\r\n                Uploaded: {createDate.toLocaleTimeString()},{\" \"}\r\n                {createDate.toDateString()}{\" \"}\r\n              </Paragraph>\r\n              {/* <Paragraph>Time & Date</Paragraph> */}\r\n            </Card.Content>\r\n            {/* <Card.Cover source={{ uri: \"https://picsum.photos/700\" }} /> */}\r\n            <Card.Actions>\r\n              <Button onPress={this.downloadPDF}>DOWNLOAD</Button>\r\n            </Card.Actions>\r\n          </Card>\r\n        );\r\n      };\r\n    \r\n    render(){\r\n        return(\r\n            <View>\r\n            <Button\r\n              style={{ flex: 1, backgroundColor: \"#4fc3f7\" }}\r\n              onPress={this.pickDocumentPDF}\r\n              disabled={this.state.uploading}\r\n            >\r\n             \r\n              \"Upload New\r\n            </Button>\r\n            {user?.quiz && (\r\n              // <SafeAreaView>\r\n              <FlatList\r\n                data={user.quiz}\r\n                renderItem={this.renderItem}\r\n                keyExtractor={item => item.pdfLink}\r\n              />\r\n              // {/* </SafeAreaView> */}\r\n            )}\r\n          </View> )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}